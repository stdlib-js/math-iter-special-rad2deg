{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport iterMap from '@stdlib/math-iter-tools-map';\nimport rad2deg from '@stdlib/math-base-special-rad2deg';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively converts an angle from radians to degrees.\n*\n* ## Notes\n*\n* -   If an environment supports `Symbol.iterator` **and** a provided iterator is iterable, the returned iterator is iterable.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* import uniform from '@stdlib/random-iter-uniform';\n*\n* var iter = iterRad2deg( uniform( 0.0, 6.28 ) );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterRad2deg( iterator ) {\n\treturn iterMap( iterator, rad2deg );\n}\n\n\n// EXPORTS //\n\nexport default iterRad2deg;\n"],"names":["iterRad2deg","iterator","iterMap","rad2deg"],"mappings":";;kMAuDA,SAASA,EAAaC,GACrB,OAAOC,EAASD,EAAUE,EAC3B"}